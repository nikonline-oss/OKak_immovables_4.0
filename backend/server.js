const app = require('./app');
const http = require('http');
const Sequelize = require('sequelize');
const server = http.createServer(app);
const { Server } = require('socket.io');
const { User, Developer, Apartment, Booking, UserCountHistory } = require('./models');


require('./models');

const io = new Server(server, {
  cors: {
    origin: "*"
  }
});
const sequelize = require('./config/bd');

const PORT = process.env.PORT || 8080;

// // –í–∞–∂–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑–≤–Ω–µ
// server.listen(PORT, '0.0.0.0', () => {  // –î–æ–±–∞–≤–ª–µ–Ω —Ö–æ—Å—Ç 0.0.0.0
//     console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
//     console.log(`–î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑: http://176.59.83.69:${PORT}`);
// });

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π
async function initialize() {
  try {
    await sequelize.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ');

    // // 3. –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    // await sequelize.sync({ force: true });
    // console.log('üîÑ –ú–æ–¥–µ–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');

    // // –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    // const user = await User.create({
    //   full_name: '–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å',
    //   password: 'testpassword',
    //   email: 'test@example.com',
    //   phone: '+71234567890',
    //   verified: true
    // });

    // const developer = await Developer.create({
    //   name: '–°—Ç—Ä–æ–π–ì–∞—Ä–¥',
    //   inn: "123442323",
    //   user_id: user.id
    // });

    // const apartment = await Apartment.create({
    //   title: '–£—é—Ç–Ω–∞—è 2-–∫–æ–º–Ω–∞—Ç–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞',
    //   description: '–ü—Ä–æ—Å—Ç–æ—Ä–Ω–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ —Å —Ä–µ–º–æ–Ω—Ç–æ–º',
    //   address: '—É–ª. –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è, 15',
    //   price: 5000000,
    //   region: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π',
    //   booking_status: 'available',
    //   link: '/apartments/1',
    //   developer_id: developer.id
    // });

    // // –°–æ–∑–¥–∞–µ–º –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è —Å–≤—è–∑–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –∫–≤–∞—Ä—Ç–∏—Ä–æ–π
    // await Booking.create({
    //   user_id: user.id,
    //   apartment_id: apartment.id,
    //   status: 'confirmed'
    // });

    // await UserCountHistory.create({ total_users: 1 });

    // –•—É–∫–∏ –¥–ª—è –º–æ–¥–µ–ª–∏ User
    // User.afterCreate(async (user) => {
    //   if (user.verified) {
    //     await updateApartmentPricesForUser(user, 'INSERT');
    //   }
    // });

    console.log('–¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–æ–∑–¥–∞–Ω—ã');


    server.listen(PORT, '0.0.0.0', () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
      console.log(`üîó –î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑: http://176.59.83.69:${PORT}`);
    });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', err);
    process.exit(1); // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
  }
}

initialize();