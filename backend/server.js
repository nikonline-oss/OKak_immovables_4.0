const app = require('./app');
const http = require('http');
const server = http.createServer(app);
const { Server } = require('socket.io');

require('./models');

const io = new Server(server, {
  cors: {
    origin: "*"
  }
});
const sequelize = require('./config/bd');

const PORT = process.env.PORT || 8080;

// // –í–∞–∂–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∏–∑–≤–Ω–µ
// server.listen(PORT, '0.0.0.0', () => {  // –î–æ–±–∞–≤–ª–µ–Ω —Ö–æ—Å—Ç 0.0.0.0
//     console.log(`–°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
//     console.log(`–î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑: http://176.59.83.69:${PORT}`);
// });

// 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–µ–π
async function initialize() {
  try {
    await sequelize.authenticate();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ë–î —É—Å–ø–µ—à–Ω–æ');
    
    // 3. –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
    await sequelize.sync({ force: true });
    console.log('üîÑ –ú–æ–¥–µ–ª–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
    
    server.listen(PORT, '0.0.0.0', () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
      console.log(`üîó –î–æ—Å—Ç—É–ø —á–µ—Ä–µ–∑: http://176.59.83.69:${PORT}`);
    });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', err);
    process.exit(1); // –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø—Ä–∏ –æ—à–∏–±–∫–µ
  }
}

initialize();